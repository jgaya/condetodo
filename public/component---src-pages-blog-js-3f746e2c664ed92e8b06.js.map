{"version":3,"sources":["webpack:///./src/components/menu.js","webpack:///./src/pages/blog.js"],"names":["Menu","current","query","menuQuery","render","data","tags","tagsGroup","group","className","href","data-hover","map","tag","Fragment","key","fieldValue","defaultProps","Blog","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","location","node","frontmatter","fields","slug","img","thumbnail","style","height","background","position","display","overflow","width","minHeight","breakInside","src","alt","color","fontFamily","fontSize","padding","marginTop","marginBottom","rhythm","boxShadow","to","date","description","excerpt","clear","React","Component","pageQuery"],"mappings":"4IAIA,SAASA,EAAKC,GACZ,OACE,kBAAC,cAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EAAOD,EAAKE,UAAUC,MAC5B,OACE,yBAAKC,UAAU,gBACb,uBAAGC,KAAK,SAASC,aAAW,SAC1B,wCAEDL,EAAKM,KAAI,SAACC,GAAD,OACV,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAIG,YACvB,uBAAGP,UAAWR,EAAQA,UAAYY,EAAIG,WAAa,SAAU,GAAIN,KAAI,SAAWG,EAAIG,WAAcL,aAAYE,EAAIG,YAChH,8BAAOH,EAAIG,mBAZvB,SAsBJ,IAAMb,EAAS,aAUfH,EAAKiB,aAAe,CAClBhB,QAAQ,IAOKD,O,4KCrCTkB,E,gLACJd,OAAA,WAAU,IACAC,EAASc,KAAKC,MAAdf,KACFgB,EAAYhB,EAAKiB,KAAKC,aAAaC,MACnCC,EAAQpB,EAAKqB,OAAOC,MAE1B,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,yBAAKf,UAAU,YACZgB,EAAMb,KAAI,YAAe,IAAZiB,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAC9CC,EAAG,IAAOJ,EAAKC,YAAYI,UACjC,OACE,yBAAKnB,IAAKc,EAAKE,OAAOC,KAAMG,MAAO,CACjCC,OAAQ,OACRC,WAAY,UACZC,SAAU,WACVC,QAAS,QACTC,SAAU,SACVC,MAAO,OACPC,UAAW,IACXC,YAAa,UAEb,4BAAQlC,UAAU,gBAChB,yBAAKmC,IAAKX,EAAKY,IAAI,UACnB,oCACE,wBACAV,MAAO,CACLE,WAAY,kBACZS,MAAO,OACPC,WAAY,0BACZC,SAAU,OACVC,QAAS,QACTC,UAAW,EACXC,aAAcC,YAAO,EAAI,KAGzB,kBAAC,OAAD,CACEjB,MAAO,CAAEkB,UAAU,OAASP,MAAO,QACnCQ,GAAE,OAASzB,EAAKE,OAAOC,MAEtBR,IAGL,6BACE,2BAAIK,EAAKC,YAAYyB,MACrB,2BAAI1B,EAAKC,YAAY0B,aAAe3B,EAAK4B,SACzC,2BAAG,uBAAG/C,KAAI,OAASmB,EAAKE,OAAOC,MAA5B,wCAOf,yBAAKG,MAAO,CAACuB,MAAO,a,GAxDXC,IAAMC,WA+DV1C,YAER,IAAM2C,EAAS,c","file":"component---src-pages-blog-js-3f746e2c664ed92e8b06.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery,graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nfunction Menu(current) {\n  return (\n    <StaticQuery\n      query={menuQuery}\n      render={data => {\n        const tags = data.tagsGroup.group;\n        return (\n          <nav className=\"cl-effect-10\">\n            <a href=\"/blog/\" data-hover=\"Todos\">\n              <span>Todos</span>\n            </a>\n            {tags.map((tag) => (\n            <React.Fragment key={tag.fieldValue}>\n              <a className={current.current === tag.fieldValue ? 'active': ''} href={`/tags/${tag.fieldValue}`} data-hover={tag.fieldValue}>\n                <span>{tag.fieldValue}</span>\n              </a>\n            </React.Fragment>\n            ))}\n          </nav>\n        );\n      }}\n    />\n  )\n}\nconst menuQuery = graphql`\n  query MenuQuery {\n    tagsGroup: allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n`\n\nMenu.defaultProps = {\n  current: ``,\n}\n\nMenu.propTypes = {\n  current: PropTypes.string,\n}\n\nexport default Menu;\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Menu from \"../components/menu\"\n\n\nclass Blog extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Menu/>\n        <div className=\"postList\">\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            const img = `/${node.frontmatter.thumbnail}` // ? node.frontmatter.thumbnail.childImageSharp.fluid.src : '';\n            return (\n              <div key={node.fields.slug} style={{\n                height: 'auto',\n                background: '#2f3238',\n                position: 'relative',\n                display: 'block',\n                overflow: 'hidden',\n                width: '100%',\n                minHeight: 200,\n                breakInside: 'avoid',\n              }}>\n                <figure className=\"effect-julia\">\n                  <img src={img} alt=\"img21\"/>\n                  <figcaption>\n                    <h3\n                    style={{\n                      background: 'rgba(0,0,0,0.4)',\n                      color: '#fff',\n                      fontFamily: 'vtc_letterer_proregular',\n                      fontSize: '22px',\n                      padding: '0.5em',\n                      marginTop: 0,\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                    >\n                      <Link\n                        style={{ boxShadow: `none`, color: '#fff' }}\n                        to={`blog${node.fields.slug}`}\n                      >\n                        {title}\n                      </Link>\n                    </h3>\n                    <div>\n                      <p>{node.frontmatter.date}</p>\n                      <p>{node.frontmatter.description || node.excerpt}</p>\n                      <p><a href={`blog${node.fields.slug}`}>Would you like to know more?</a></p>\n                    </div>\n                  </figcaption>\t\t\t\n                </figure>\n              </div>\n            )\n          })}\n          <div style={{clear: 'both'}}></div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}