{"version":3,"sources":["webpack:///./src/components/button.js","webpack:///./src/pages/blogtag.js"],"names":["ButtonWrapper","styled","button","props","background","color","fontSize","fontWeight","radius","marginTop","marginBottom","Button","children","Blogtag","render","this","data","pageContext","siteTitle","site","siteMetadata","title","posts","allMdx","edges","tag","location","current","style","margin","columns","columnGap","padding","map","node","frontmatter","fields","slug","img","thumbnail","key","height","position","display","overflow","width","minHeight","breakInside","className","src","alt","fontFamily","rhythm","boxShadow","to","date","description","excerpt","href","clear","React","Component","pageQuery"],"mappings":"2FAAA,yBAOMA,EAPN,UAOsBC,EAAOC,OAAV,4EAAGD,CAAH,qVAWH,SAAAE,GAAK,OAAIA,EAAMA,MAAMC,YAAc,WACxC,SAAAD,GAAK,OAAIA,EAAMA,MAAME,OAAS,wBAC1B,SAAAF,GAAK,OAAIA,EAAMA,MAAMG,UAAY,UAC/B,SAAAH,GAAK,OAAIA,EAAMA,MAAMI,YAAc,SACjC,SAAAJ,GAAK,OAAIA,EAAMA,MAAMK,QAAU,SAClC,SAAAL,GAAK,OAAIA,EAAMA,MAAMM,aAClB,SAAAN,GAAK,OAAIA,EAAMA,MAAMO,gBAOzBC,IA5BA,SAAAR,GAAK,OAClB,kBAACH,EAAD,CAAeG,MAAOA,GAAQA,EAAMS,Y,oMCMhCC,E,gLACJC,OAAA,WAAU,IAAD,EACuBC,KAAKZ,MAA3Ba,EADD,EACCA,KAAMC,EADP,EACOA,YACRC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,OAAOC,MACpBC,EAAMR,EAAYQ,IAExB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKZ,MAAMuB,SAAUL,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAK,mBAAqBI,IAC/B,kBAAC,IAAD,CAAME,QAASF,IACf,yBAAKG,MAAO,CACVC,OAAQ,cACRC,QAAS,EACTC,UAAW,EACXC,QAAS,IAERV,EAAMW,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KAC9CC,EAAG,IAAOJ,EAAKC,YAAYI,UACjC,OACE,yBAAKC,IAAKN,EAAKE,OAAOC,KAAMT,MAAO,CACjCa,OAAQ,OACRrC,WAAY,UACZsC,SAAU,WACVC,QAAS,QACTC,SAAU,SACVC,MAAO,OACPC,UAAW,IACXC,YAAa,UAEb,4BAAQC,UAAU,gBAChB,yBAAKC,IAAKX,EAAKY,IAAI,UACnB,oCACE,wBACAtB,MAAO,CACLxB,WAAY,kBACZC,MAAO,OACP8C,WAAY,0BACZ7C,SAAU,OACV0B,QAAS,QACTvB,UAAW,EACXC,aAAc0C,YAAO,EAAI,KAGzB,kBAAC,OAAD,CACExB,MAAO,CAAEyB,UAAU,OAAShD,MAAO,QACnCiD,GAAE,OAASpB,EAAKE,OAAOC,MAEtBhB,IAGL,6BACE,2BAAIa,EAAKC,YAAYoB,MACrB,2BAAIrB,EAAKC,YAAYqB,aAAetB,EAAKuB,SACzC,2BAAG,uBAAGC,KAAI,GAAKxB,EAAKE,OAAOC,MAAxB,wCAOf,yBAAKT,MAAO,CAAC+B,MAAO,a,GA9DRC,IAAMC,WAqEbhD,YAER,IAAMiD,EAAS","file":"component---src-pages-blogtag-js-052568ea4363430f8c3b.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Button = props => (\n  <ButtonWrapper props={props}>{props.children}</ButtonWrapper>\n)\n\nconst ButtonWrapper = styled.button`\n  display: block;\n  border: none;\n  text-align: center;\n  box-sizing: border-box;\n  text-decoration: none;\n  padding: 10px 25px;\n  cursor: pointer;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n\n  background: ${props => props.props.background || \"black\"};\n  color: ${props => props.props.color || \"rgb(255, 255, 255)\"};\n  font-size: ${props => props.props.fontSize || \"15px\"};\n  font-weight: ${props => props.props.fontWeight || \"600\"};\n  border-radius: ${props => props.props.radius || \"6px\"};\n  margin-top: ${props => props.props.marginTop};\n  margin-bottom: ${props => props.props.marginBottom};\n\n  &:hover {\n    box-shadow: inset 0 0 100px 100px rgba(255, 255, 255, 0.25);\n  }\n`\n\nexport default Button\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Button from \"../components/button\"\nimport Menu from \"../components/menu\"\n\nclass Blogtag extends React.Component {\n  render() {\n    const { data, pageContext } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n    const tag = pageContext.tag \n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={`All posts about ${tag}`} />\n        <Menu current={tag}/>\n        <div style={{ \n          margin: \"20px 0 40px\",\n          columns: 4,\n          columnGap: 5,\n          padding: 5,\n          }}>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            const img = `/${node.frontmatter.thumbnail}` // ? node.frontmatter.thumbnail.childImageSharp.fluid.src : '';\n            return (\n              <div key={node.fields.slug} style={{\n                height: 'auto',\n                background: '#2f3238',\n                position: 'relative',\n                display: 'block',\n                overflow: 'hidden',\n                width: '100%',\n                minHeight: 200,\n                breakInside: 'avoid',\n              }}>\n                <figure className=\"effect-julia\">\n                  <img src={img} alt=\"img21\"/>\n                  <figcaption>\n                    <h3\n                    style={{\n                      background: 'rgba(0,0,0,0.4)',\n                      color: '#fff',\n                      fontFamily: 'vtc_letterer_proregular',\n                      fontSize: '22px',\n                      padding: '0.5em',\n                      marginTop: 0,\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                    >\n                      <Link\n                        style={{ boxShadow: `none`, color: '#fff' }}\n                        to={`blog${node.fields.slug}`}\n                      >\n                        {title}\n                      </Link>\n                    </h3>\n                    <div>\n                      <p>{node.frontmatter.date}</p>\n                      <p>{node.frontmatter.description || node.excerpt}</p>\n                      <p><a href={`${node.fields.slug}`}>Would you like to know more?</a></p>\n                    </div>\n                  </figcaption>\t\t\t\n                </figure>\n              </div>\n            )\n          })}\n          <div style={{clear: 'both'}}></div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Blogtag\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(filter: {fields: {}, frontmatter: {tags: {in: [$tag]}}}, sort: {fields: [frontmatter___date], order: DESC}) {\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}